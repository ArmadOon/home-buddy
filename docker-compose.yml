version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - homebuddy-network

  # Redis - zatím nepoužíváme, připraveno pro budoucnost
  # redis:
  #   image: redis:7-alpine
  #   command: redis-server --requirepass ${REDIS_PASSWORD}
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   networks:
  #     - homebuddy-network

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    environment:
      # Database configuration
      DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      DATABASE_DRIVER: org.postgresql.Driver
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}

      # JWT configuration
      JWT_SECRET: ${JWT_SECRET}

      # Service configuration
      AUTH_SERVICE_PORT: 8081
      ENVIRONMENT: ${ENVIRONMENT:-production}

      # Logging
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_ARMADOON: DEBUG
    ports:
      - "${AUTH_SERVICE_PORT:-8081}:8081"
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    restart: unless-stopped
    networks:
      - homebuddy-network

  # API Gateway (připraveno pro budoucnost)
  # api-gateway:
  #   build:
  #     context: .
  #     dockerfile: api-gateway/Dockerfile
  #   environment:
  #     API_GATEWAY_PORT: 8080
  #     AUTH_SERVICE_URL: http://auth-service:8081
  #   ports:
  #     - "${API_GATEWAY_PORT:-8080}:8080"
  #   depends_on:
  #     - auth-service
  #   networks:
  #     - homebuddy-network

volumes:
  postgres_data:
    driver: local
  # redis_data:
  #   driver: local

networks:
  homebuddy-network:
    driver: bridge